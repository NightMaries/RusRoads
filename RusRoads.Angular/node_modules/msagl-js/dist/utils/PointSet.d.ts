import { Point } from '../math/geometry/point';
export declare class PointSet implements Set<Point> {
    mapOfSets: Map<number, Set<number>>;
    private size_;
    delete(point: Point): boolean;
    clear(): void;
    get size(): number;
    static mk(points: Iterable<Point>): PointSet;
    addxy(x: number, y: number): void;
    add(p: Point): this;
    deletexy(x: number, y: number): boolean;
    hasxy(x: number, y: number): boolean;
    has(p: Point): boolean;
    constructor();
    forEach(callbackfn: (value: Point, value2: Point, set: Set<Point>) => void, thisArg?: any): void;
    entries(): IterableIterator<[Point, Point]>;
    keys(): IterableIterator<Point>;
    [Symbol.toStringTag]: string;
    values(): IterableIterator<Point>;
    [Symbol.iterator](): IterableIterator<Point>;
}
