import { ArrowTypeEnum } from './arrowTypeEnum';
import { Color } from './color';
import { StyleEnum } from './styleEnum';
import { RankEnum } from './rankEnum';
import { DirTypeEnum, OrderingEnum } from './dotparser';
import { LayerDirectionEnum } from '..';
import { AttrContainer } from '../structs/attrContainer';
export declare abstract class DrawingObject {
    attrCont: AttrContainer;
    static defaultLabelFontName: string;
    static defaultLabelFontSize: number;
    color: Color;
    fillColor: Color;
    labelfontcolor: Color;
    private _labelText;
    get labelText(): string;
    set labelText(value: string);
    headlabel: string;
    taillabel: string;
    fontColor: Color;
    styleEnum: StyleEnum;
    pencolor: Color;
    peripheries: number;
    size: [number, number];
    rankdir: LayerDirectionEnum;
    fontname: any;
    width: number;
    height: number;
    margin: number;
    len: number;
    fontsize: number;
    minlen: number;
    rank: RankEnum;
    charset: any;
    orientation: any;
    ratio: any;
    weight: number;
    ranksep: number;
    splines: boolean;
    overlap: boolean;
    arrowtail: ArrowTypeEnum;
    arrowhead: ArrowTypeEnum;
    ordering: OrderingEnum;
    URL: string;
    dir: DirTypeEnum;
    concentrate: boolean;
    compound: boolean;
    lhead: string;
    bgcolor: Color;
    center: boolean;
    pos: [number, number];
    nodesep: number;
    rotate: number;
    arrowsize: number;
    colorscheme: string;
    ltail: string;
    sides: number;
    distortion: number;
    skew: number;
    bb: [number, number, number, number];
    labelloc: string;
    decorate: boolean;
    tailclip: boolean;
    headclip: boolean;
    constraint: boolean;
    gradientangle: number;
    samehead: string;
    href: string;
    imagepath: string;
    image: string;
    labejust: string;
    layers: string[];
    layer: string;
    layersep: number;
    f: number;
    nojustify: boolean;
    root: boolean;
    page: [number, number];
    pname: any;
    kind: any;
    fname: any;
    subkind: any;
    area: number;
    tailport: string;
    headport: string;
    wt: any;
    id: any;
    edgetooltip: any;
    headURL: any;
    tailURL: any;
    labelURL: any;
    edgeurl: any;
    tailtooltip: any;
    headtooltip: any;
    shapefile: any;
    xlabel: any;
    sametail: string;
    clusterRank: any;
    bind(): void;
    constructor(attrCont: AttrContainer);
    static getDrawingObj(attrCont: AttrContainer): DrawingObject;
}
