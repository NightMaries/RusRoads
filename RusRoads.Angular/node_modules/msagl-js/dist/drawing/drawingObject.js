import { Color } from './color';
export class DrawingObject {
    constructor(attrCont) {
        this.color = Color.parse('Black');
        this.labelfontcolor = Color.parse('Black');
        this.attrCont = attrCont;
        this.bind();
    }
    get labelText() {
        return this._labelText;
    }
    set labelText(value) {
        this._labelText = value;
    }
    bind() {
        if (this.attrCont != null) {
            this.attrCont.setAttr(1, this); // the attribute at 0 is for geometry, at 1 is for drawing
        }
    }
    static getDrawingObj(attrCont) {
        if (attrCont == null) {
            return null;
        }
        else {
            return attrCont.getAttr(1); // the attribute at 0 is for geometry, at 1 is for drawing
        }
    }
}
// not all attributes can be used in derived classes
DrawingObject.defaultLabelFontName = 'Times-Roman';
DrawingObject.defaultLabelFontSize = 12;
//# sourceMappingURL=drawingObject.js.map