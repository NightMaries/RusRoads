import { comparePointsYFirst as comparePointsYX } from '../../utils/compare';
import { distPP } from './point';
/** An unordered pair of points */
export class PointPair {
    constructor(first, second) {
        if (comparePointsYX(first, second) < 0) {
            this.first = first;
            this.second = second;
        }
        else {
            this.first = second;
            this.second = first;
        }
    }
    get First() {
        return this.first;
    }
    get Second() {
        return this.second;
    }
    get Length() {
        return distPP(this.first, this.second);
    }
    CompareTo(other) {
        const cr = comparePointsYX(this.first, other.first);
        if (cr != 0) {
            return cr;
        }
        return comparePointsYX(this.second, other.second);
    }
    static equal(pair0, pair1) {
        return pair0.first.equal(pair1.first) && pair0.second.equal(pair1.second);
    }
    toString() {
        return this.first + (' ' + this.second);
    }
}
//# sourceMappingURL=pointPair.js.map