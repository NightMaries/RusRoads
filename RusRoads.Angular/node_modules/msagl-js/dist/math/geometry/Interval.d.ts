import { IRectangle } from './IRectangle';
export declare class Interval implements IRectangle<number> {
    start: number;
    end: number;
    constructor(start: number, end: number);
    area: number;
    add(n: number): void;
    add_rect(rectangle: IRectangle<number>): IRectangle<number>;
    clone(): Interval;
    contains_point(n: number): boolean;
    contains_rect(rect: IRectangle<number>): boolean;
    intersection_rect(rectangle: IRectangle<number>): IRectangle<number>;
    intersects_rect(rectangle: IRectangle<number>): boolean;
    contains_point_radius(p: number, radius: number): boolean;
    static mkInterval(a: Interval, b: Interval): Interval;
    add_d(v: number): void;
    get Start(): number;
    set Start(value: number);
    get Length(): number;
    contains_d(v: number): boolean;
    GetInRange(v: number): number;
    intersects(other: Interval): boolean;
}
