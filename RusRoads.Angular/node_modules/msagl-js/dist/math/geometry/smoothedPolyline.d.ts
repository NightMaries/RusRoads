import { CornerSite } from './cornerSite';
import { Point } from './../../math/geometry/point';
import { LineSegment } from './../../math/geometry/lineSegment';
import { Curve } from './../../math/geometry/curve';
import { BezierSeg } from './../../math/geometry/bezierSeg';
export declare class SmoothedPolyline {
    static mkFromPoints(points: Iterable<Point>): SmoothedPolyline;
    readonly headSite: CornerSite;
    clone(): SmoothedPolyline;
    constructor(head: CornerSite);
    get lastSite(): CornerSite;
    getSegments(): IterableIterator<LineSegment>;
    [Symbol.iterator](): IterableIterator<Point>;
    /** Creates a curve by using the underlying polyline*/
    createCurve(): Curve;
    static createBezierSegOnSite(b: CornerSite): BezierSeg;
}
