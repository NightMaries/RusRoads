import { BasicGraphOnEdges } from '../../structs/basicGraphOnEdges';
import { BinaryHeapPriorityQueue } from '../../structs/BinaryHeapPriorityQueue';
import { IEdge } from '../../structs/iedge';
export declare class MinimumSpanningTreeByPrim {
    graph: BasicGraphOnEdges<IEdge>;
    weight: (e: IEdge) => number;
    root: number;
    q: BinaryHeapPriorityQueue;
    treeNodes: Set<number>;
    hedgehog: Map<number, IEdge>;
    constructor(graph: BasicGraphOnEdges<IEdge>, weight: (e: IEdge) => number, root: number);
    NodeIsInTree(i: number): boolean;
    GetTreeEdges(): IEdge[];
    AddEdgeToTree(ret: Array<IEdge>): void;
    UpdateOutEdgesOfV(v: number): void;
    UpdateInEdgesOfV(v: number): void;
    Init(): void;
}
