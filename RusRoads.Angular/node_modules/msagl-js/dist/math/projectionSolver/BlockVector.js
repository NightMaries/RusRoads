export class BlockVector {
    constructor() {
        this.Vector = new Array();
    }
    get Count() {
        return this.Vector.length;
    }
    item(index) {
        return this.Vector[index];
    }
    Add(block) {
        block.VectorIndex = this.Vector.length;
        this.Vector.push(block);
        /*Assert.assert(
          this.Vector[block.VectorIndex] == block,
          'Inconsistent block.VectorIndex',
        )*/
    }
    Remove(block) {
        /*Assert.assert(
          this.Vector[block.VectorIndex] == block,
          'Inconsistent block.VectorIndex',
        )*/
        const swapBlock = this.Vector[this.Vector.length - 1];
        this.Vector[block.VectorIndex] = swapBlock;
        swapBlock.VectorIndex = block.VectorIndex;
        this.Vector.pop();
    }
    toString() {
        return this.Vector.toString();
    }
}
//# sourceMappingURL=BlockVector.js.map