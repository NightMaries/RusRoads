export class UniformSolverVar {
    constructor() {
        this.lowBound = Number.NEGATIVE_INFINITY;
        this.upperBound = Number.POSITIVE_INFINITY;
    }
    get Position() {
        return this.position;
    }
    set Position(value) {
        if (value < this.lowBound) {
            this.position = this.lowBound;
        }
        else if (value > this.upperBound) {
            this.position = this.upperBound;
        }
        else {
            this.position = value;
        }
    }
    get LowBound() {
        return this.lowBound;
    }
    set LowBound(value) {
        /*Assert.assert(value <= this.upperBound)*/
        this.lowBound = value;
    }
    get UpperBound() {
        return this.upperBound;
    }
    set UpperBound(value) {
        /*Assert.assert(value >= this.LowBound)*/
        this.upperBound = value;
    }
    toString() {
        return this.lowBound + (' ' + (this.Position + (' ' + this.upperBound)));
    }
}
//# sourceMappingURL=UniformSolverVar.js.map