import { GeomGraph } from './core/GeomGraph';
import { CancelToken } from '../utils/cancelToken';
import { GeomEdge } from './core/geomEdge';
import { LayoutSettings } from './layered/SugiyamaLayoutSettings';
import { EdgeRoutingSettings } from '../routing/EdgeRoutingSettings';
export declare function enforceLayoutSettings(geomGraph: GeomGraph, ss: LayoutSettings): void;
export declare function layoutGeomGraph(geomGraph: GeomGraph, cancelToken: CancelToken): void;
export declare function getEdgeRoutingSettingsFromAncestors(geomGraph: GeomGraph): EdgeRoutingSettings;
export declare function edgeRouter(geomGraph: GeomGraph, edgesToRoute: GeomEdge[], cancelToken: CancelToken): void;
export declare function layoutGeomGraphDetailed(geomG: GeomGraph, cancelToken: CancelToken, layoutEngine: (g: GeomGraph, cancelToken: CancelToken) => void, edgeRouter: (g: GeomGraph, edgesToRoute: GeomEdge[], cancelToken: CancelToken) => void, packing: (g: GeomGraph, subGraphs: GeomGraph[]) => void, flipToScreenCoords?: boolean): void;
/** route edges with segments paralles to either X or Y axes */
export declare function routeRectilinearEdges(geomG: GeomGraph, edgesToRoute: GeomEdge[], cancelToken: CancelToken, nodePadding?: number, cornerFitRadius?: number): void;
