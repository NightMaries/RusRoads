import { EdgeConstraints } from '../edgeConstraints';
import { LayoutSettings } from '../layered/SugiyamaLayoutSettings';
/** Settings for multi-dimensional scaling */
export declare class MdsLayoutSettings extends LayoutSettings {
    private pivotNumber;
    private iterationsWithMajorization;
    private scaleX;
    private scaleY;
    private exponent;
    private rotationAngle;
    removeOverlaps: boolean;
    _callIterationsWithMajorizationThreshold: number;
    get RemoveOverlaps(): boolean;
    set RemoveOverlaps(value: boolean);
    get PivotNumber(): number;
    set PivotNumber(value: number);
    /** Number of iterations in distance scaling: these iterations beautify the layout locally. This heuristic is optional , and the property has to be set to zero for a large graph, because each iteration has O(n*n) time, where n is the number of nodes in the graph */
    get IterationsWithMajorization(): number;
    set IterationsWithMajorization(value: number);
    get ScaleX(): number;
    set ScaleX(value: number);
    get ScaleY(): number;
    set ScaleY(value: number);
    get Exponent(): number;
    set Exponent(value: number);
    get RotationAngle(): number;
    set RotationAngle(value: number);
    edgeConstraints: EdgeConstraints;
    get IdealEdgeLength(): EdgeConstraints;
    set IdealEdgeLength(value: EdgeConstraints);
    adjustScale: boolean;
    get AdjustScale(): boolean;
    set AdjustScale(value: boolean);
    GetNumberOfIterationsWithMajorization(nodeCount: number): number;
    get CallIterationsWithMajorizationThreshold(): number;
    set CallIterationsWithMajorizationThreshold(value: number);
}
