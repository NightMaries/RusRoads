import { PolyIntEdge } from './polyIntEdge';
import { IEdge } from '../../structs/iedge';
import { IntPairMap } from '../../utils/IntPairMap';
import { IntPair } from '../../utils/IntPair';
import { Anchor } from './anchor';
export declare class Database {
    Anchors: Anchor[];
    MultipleMiddles: Set<number>;
    Multiedges: IntPairMap<PolyIntEdge[]>;
    RegularMultiedges(): IterableIterator<PolyIntEdge[]>;
    AllIntEdges(): IterableIterator<PolyIntEdge>;
    addFeedbackSet(feedbackSet: IEdge[]): void;
    constructor(n: number);
    registerOriginalEdgeInMultiedges(edge: PolyIntEdge): void;
    SkeletonEdges(): IterableIterator<PolyIntEdge>;
    GetMultiedge(source: number, target: number): PolyIntEdge[];
    GetMultiedgeI(ip: IntPair): Array<PolyIntEdge>;
}
