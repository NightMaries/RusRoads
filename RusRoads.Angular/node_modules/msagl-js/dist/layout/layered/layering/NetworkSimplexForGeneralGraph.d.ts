import { BasicGraph } from '../../../structs/BasicGraph';
import { BasicGraphOnEdges } from '../../../structs/basicGraphOnEdges';
import { CancelToken } from '../../../utils/cancelToken';
import { GeomNode } from '../../core/geomNode';
import { PolyIntEdge } from '../polyIntEdge';
import { LayerCalculator } from './layerCalculator';
export declare class NetworkSimplexForGeneralGraph implements LayerCalculator {
    graph: BasicGraphOnEdges<PolyIntEdge>;
    Cancel: CancelToken;
    GetLayers(): number[];
    ShrunkComponent(dictionary: Map<number, number>): BasicGraph<GeomNode, PolyIntEdge>;
    constructor(graph: BasicGraph<GeomNode, PolyIntEdge>, cancelObject: CancelToken);
}
