import { BasicGraph } from '../../../structs/BasicGraph';
import { PolyIntEdge } from '../polyIntEdge';
import { NetworkSimplex } from './NetworkSimplex';
export class NetworkSimplexForGeneralGraph {
    constructor(graph, cancelObject) {
        this.graph = graph;
        this.Cancel = cancelObject;
    }
    GetLayers() {
        return new NetworkSimplex(this.graph, this.Cancel).GetLayers();
    }
    ShrunkComponent(dictionary) {
        const edges = [];
        for (const p of dictionary) {
            const v = p[0];
            const newEdgeSource = p[1];
            for (const e of this.graph.outEdges[v]) {
                const pe = new PolyIntEdge(newEdgeSource, dictionary.get(e.target), e.edge);
                pe.separation = e.separation;
                pe.weight = e.weight;
                edges.push(pe);
            }
        }
        return new BasicGraph(edges, dictionary.size);
    }
}
//# sourceMappingURL=NetworkSimplexForGeneralGraph.js.map