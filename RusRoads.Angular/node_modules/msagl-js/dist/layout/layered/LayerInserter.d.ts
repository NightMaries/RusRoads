import { BasicGraph } from '../../structs/BasicGraph';
import { GeomNode } from '../core/geomNode';
import { Database } from './Database';
import { LayerArrays } from './LayerArrays';
import { PolyIntEdge } from './polyIntEdge';
import { ProperLayeredGraph } from './ProperLayeredGraph';
export declare class LayerInserter {
    intGraph: BasicGraph<GeomNode, PolyIntEdge>;
    database: Database;
    layeredGraph: ProperLayeredGraph;
    virtNodesToIntEdges: PolyIntEdge[];
    nLayeredGraph: ProperLayeredGraph;
    la: LayerArrays;
    Nla: LayerArrays;
    totalNodes: number;
    constructor(layeredGraph: ProperLayeredGraph, la: LayerArrays, database: Database, intGraphP: BasicGraph<GeomNode, PolyIntEdge>);
    static InsertLayers(layeredGraph: ProperLayeredGraph, la: LayerArrays, db: Database, intGraphP: BasicGraph<GeomNode, PolyIntEdge>): {
        layeredGraph: ProperLayeredGraph;
        la: LayerArrays;
    };
    get NLayering(): number[];
    InsertLayers(): void;
    EditOldLayering(): void;
    private UpdateOldLayer;
    WidenOriginalLayers(): void;
    FillUnsortedNewOddLayers(): void;
    MapVirtualNodesToEdges(): void;
    CreateFullLayeredGraph(): void;
    SortNewOddLayers(): void;
    InitNewLayering(): void;
    static RegisterDontStepOnVertex(db: Database, parent: PolyIntEdge): void;
}
