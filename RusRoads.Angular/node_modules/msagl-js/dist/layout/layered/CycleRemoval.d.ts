import { IEdge } from '../../structs/iedge';
import { BasicGraphOnEdges } from '../../structs/basicGraphOnEdges';
import { IntPair } from '../../utils/IntPair';
import { IntPairSet } from '../../utils/IntPairSet';
import { Stack } from 'stack-typescript';
declare enum VertStatus {
    NotVisited = 0,
    InStack = 1,
    Visited = 2
}
declare class StackStruct {
    v: number;
    i: number;
    constructor(v: number, i: number);
}
export declare class CycleRemoval {
    static getFeedbackSetWithConstraints(arg0: BasicGraphOnEdges<IntPair>, arg1: IntPairSet): IntPair[];
    static push(stack: Stack<StackStruct>, status: VertStatus[], v: number, i: number): void;
    static getFeedbackSet(graph: BasicGraphOnEdges<IEdge>): IEdge[];
}
export {};
