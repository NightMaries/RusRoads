import { BasicGraphOnEdges } from '../../structs/basicGraphOnEdges';
import { IntPair } from '../../utils/IntPair';
import { IntPairSet } from '../../utils/IntPairSet';
import { GeomNode } from '../core/geomNode';
export declare class HorizontalConstraintsForSugiyama {
    readonly leftRightConstraints: [GeomNode, GeomNode][];
    readonly leftRightNeighbors: [GeomNode, GeomNode][];
    readonly nodeToBlockRoot: Map<number, number>;
    readonly upDownVerticalConstraints: [GeomNode, GeomNode][];
    BlockRootToBlock: Map<number, number[]>;
    LeftRighInts: IntPairSet;
    LeftRightIntNeibs: IntPairSet;
    VerticalInts: IntPairSet;
    nodeIdToIndex: Map<string, number>;
    get IsEmpty(): boolean;
    AddSameLayerNeighbors(neighbors: Array<GeomNode>): void;
    AddSameLayerNeighborsPair(leftNode: GeomNode, rightNode: GeomNode): void;
    NodeToBlockRootSoft(i: number): number;
    CreateMappingOfNeibBlocks(): void;
    BasicGraphFromLeftRightIntNeibs(): BasicGraphOnEdges<IntPair>;
    NodeIndex(node: GeomNode): number;
    PrepareForOrdering(nodeToIndexParameter: Map<string, number>, yLayers: number[]): void;
    LiftLeftRightRelationsToNeibBlocks(): void;
    MapNodesToToIntegers(yLayers: number[]): void;
}
