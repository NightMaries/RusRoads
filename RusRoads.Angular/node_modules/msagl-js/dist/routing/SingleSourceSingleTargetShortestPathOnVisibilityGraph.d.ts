import { VisibilityGraph } from './visibility/VisibilityGraph';
import { VisibilityVertex } from './visibility/VisibilityVertex';
export declare class SingleSourceSingleTargetShortestPathOnVisibilityGraph {
    _source: VisibilityVertex;
    _target: VisibilityVertex;
    _visGraph: VisibilityGraph;
    _lengthMultiplier: number;
    get LengthMultiplier(): number;
    set LengthMultiplier(value: number);
    _lengthMultiplierForAStar: number;
    get LengthMultiplierForAStar(): number;
    set LengthMultiplierForAStar(value: number);
    constructor(visGraph: VisibilityGraph, sourceVisVertex: VisibilityVertex, targetVisVertex: VisibilityVertex);
    GetPath(shrinkEdgeLength: boolean): Array<VisibilityVertex>;
    private PassableOutEdge;
    private PassableInEdge;
    private static IsForbidden;
    private ProcessNeighborN;
    private ProcessNeighbor;
    private H;
    private CalculatePath;
}
