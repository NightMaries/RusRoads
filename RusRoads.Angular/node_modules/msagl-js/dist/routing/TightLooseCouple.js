//  an utility class to keep different polylines created around a shape
export class TightLooseCouple {
    get TightPolyline() {
        return this.tightPoly;
    }
    set TightPolyline(value) {
        this.tightPoly = value;
    }
    static mk(tightPolyline, looseShape, distance) {
        const ret = new TightLooseCouple();
        ret.TightPolyline = tightPolyline;
        ret.LooseShape = looseShape;
        ret.Distance = distance;
        return ret;
    }
    toString() {
        return ((this.TightPolyline == null ? 'null' : this.TightPolyline.toString().substring(0, 5)) +
            ',' +
            (this.LooseShape == null ? 'null' : this.LooseShape.toString().substring(0, 5)));
    }
}
//# sourceMappingURL=TightLooseCouple.js.map