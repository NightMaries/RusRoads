import { Point } from '../../math/geometry/point';
import { PolylinePoint } from '../../math/geometry/polylinePoint';
export declare class ActiveEdgeComparerWithRay {
    pivot: Point;
    get Pivot(): Point;
    set Pivot(value: Point);
    pointOnTheRay: Point;
    get IntersectionOfTheRayAndInsertedEdge(): Point;
    set IntersectionOfTheRayAndInsertedEdge(value: Point);
    Compare(x: PolylinePoint, y: PolylinePoint): 1 | -1;
    IntersectionPointBelongsToTheInsertedEdge(x: PolylinePoint): boolean;
    IntersectEdgeWithRayPPP(source: Point, target: Point, ray: Point): Point;
    IntersectEdgeWithRay(side: PolylinePoint, ray: Point): Point;
    static constructorPP(pivot: Point, pointOnTheRay: Point): ActiveEdgeComparerWithRay;
}
