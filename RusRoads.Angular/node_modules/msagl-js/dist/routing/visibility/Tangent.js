import { String } from 'typescript-string-operations';
export class Tangent {
    constructor(start, end) {
        this.start = start;
        this.End = end;
    }
    // the complimentary tangent
    get Comp() {
        return this.comp;
    }
    set Comp(value) {
        this.comp = value;
    }
    get IsHigh() {
        return !this.IsLow;
    }
    // true means that it is a low tangent to Q, false meanst that it is a high tangent to Q
    get IsLow() {
        return this.lowTangent;
    }
    set IsLow(value) {
        this.lowTangent = value;
    }
    get SeparatingPolygons() {
        return this.separatingPolygons;
    }
    set SeparatingPolygons(value) {
        this.separatingPolygons = value;
    }
    //  the diagonal will be not a null only when it is active
    get Diagonal() {
        return this.diagonal;
    }
    set Diagonal(value) {
        this.diagonal = value;
    }
    get Start() {
        return this.start;
    }
    set Start(value) {
        this.start = value;
    }
    get End() {
        return this.end;
    }
    set End(value) {
        this.end = value;
    }
    toString() {
        return String.Format('{0},{1}', this.Start, this.End);
    }
}
//# sourceMappingURL=Tangent.js.map