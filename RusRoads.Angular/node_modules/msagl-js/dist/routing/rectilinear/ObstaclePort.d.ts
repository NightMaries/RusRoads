import { Point, Rectangle, ICurve, Direction } from '../../math/geometry';
import { Port } from '../../layout/core/port';
import { VisibilityVertex } from '../visibility/VisibilityVertex';
import { Obstacle } from './obstacle';
import { ObstaclePortEntrance } from './ObstaclePortEntrance';
import { ObstacleTree } from './ObstacleTree';
import { TransientGraphUtility } from './TransientGraphUtility';
export declare class ObstaclePort {
    Port: Port;
    Obstacle: Obstacle;
    CenterVertex: VisibilityVertex;
    PortEntrances: Array<ObstaclePortEntrance>;
    HasCollinearEntrances: boolean;
    Location: Point;
    VisibilityRectangle: Rectangle;
    constructor(port: Port, obstacle: Obstacle);
    CreatePortEntrance(unpaddedBorderIntersect: Point, outDir: Direction, obstacleTree: ObstacleTree): void;
    ClearVisibility(): void;
    AddToGraph(transUtil: TransientGraphUtility, routeToCenter: boolean): void;
    RemoveFromGraph(): void;
    get LocationHasChanged(): boolean;
    get PortCurve(): ICurve;
    get PortLocation(): Point;
    toString(): string;
}
