//  A Group is a Shape that has children.
//  This class defines a single crossing of a group boundary, from a point on the group boundary.
//  It is intended as the Value of a GroupBoundaryCrossingMap entry, or as an element in a VisiblityEdge.GroupCrossings
import { String } from 'typescript-string-operations';
import { CompassVector } from '../../math/geometry/compassVector';
import { GeomConstants } from '../../math/geometry/geomConstants';
//  array, so the actual crossing coordinates are not included.
export class GroupBoundaryCrossing {
    constructor(group, dirToInside) {
        this.BoundaryWidth = GeomConstants.distanceEpsilon;
        /*Assert.assert(
          CompassVector.IsPureDirection(dirToInside),
          'Impure direction',
        )*/
        this.Group = group;
        this.DirectionToInside = dirToInside;
    }
    GetInteriorVertexPoint(outerVertex) {
        return GeomConstants.RoundPoint(outerVertex.add(CompassVector.toPoint(this.DirectionToInside).mul(this.BoundaryWidth)));
    }
    toString() {
        return String.Format('{0} {1}', this.DirectionToInside, this.Group);
    }
}
GroupBoundaryCrossing.BoundaryWidth = GeomConstants.distanceEpsilon;
//# sourceMappingURL=GroupBoundaryCrossing.js.map