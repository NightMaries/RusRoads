import { StaticGraphUtility } from './StaticGraphUtility';
export class NeighborSides {
    ///  Dereferences the node if non-null to return the side Item.
    get LowNeighborSide() {
        return this.LowNeighbor == null ? null : this.LowNeighbor.item;
    }
    ///  Dereferences the node if non-null to return the side Item.
    get HighNeighborSide() {
        return this.HighNeighbor == null ? null : this.HighNeighbor.item;
    }
    Clear() {
        this.LowNeighbor = null;
        this.LowOverlapEnd = null;
        this.GroupSideInterveningBeforeLowNeighbor = null;
        this.HighNeighbor = null;
        this.HighOverlapEnd = null;
        this.GroupSideInterveningBeforeHighNeighbor = null;
    }
    SetSides(dir, neighborNode, overlapEndNode, interveningGroupSide) {
        if (StaticGraphUtility.IsAscending(dir)) {
            this.HighNeighbor = neighborNode;
            this.HighOverlapEnd = overlapEndNode;
            this.GroupSideInterveningBeforeHighNeighbor = interveningGroupSide;
            return;
        }
        this.LowNeighbor = neighborNode;
        this.LowOverlapEnd = overlapEndNode;
        this.GroupSideInterveningBeforeLowNeighbor = interveningGroupSide;
    }
}
//# sourceMappingURL=NeighborSides.js.map