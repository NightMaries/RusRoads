import { Direction } from '../../math/geometry/direction';
import { Point } from '../../math/geometry/point';
import { SegmentBase } from '../visibility/SegmentBase';
export declare class ScanDirection {
    dir: Direction;
    get Dir(): Direction;
    set Dir(value: Direction);
    DirectionAsPoint: Point;
    PerpDirection: Direction;
    PerpDirectionAsPoint: Point;
    OppositeDirection: Direction;
    constructor(directionAlongScanLine: Direction);
    get IsHorizontal(): boolean;
    get IsVertical(): boolean;
    Compare(lhs: Point, rhs: Point): number;
    CompareScanCoord(lhs: Point, rhs: Point): number;
    ComparePerpCoord(lhs: Point, rhs: Point): number;
    IsFlatS(seg: SegmentBase): boolean;
    IsFlatPP(start: Point, end: Point): boolean;
    IsPerpendicularS(seg: SegmentBase): boolean;
    IsPerpendicularPP(start: Point, end: Point): boolean;
    Coord(point: Point): number;
    Min(first: Point, second: Point): Point;
    Max(first: Point, second: Point): Point;
    static HorizontalInstance: ScanDirection;
    static VerticalInstance: ScanDirection;
    get PerpendicularInstance(): ScanDirection;
    static GetInstance(dir: Direction): ScanDirection;
    ToString(): string;
}
