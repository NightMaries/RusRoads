import { Direction } from '../../math/geometry/direction';
import { Point } from '../../math/geometry/point';
import { GroupBoundaryCrossing } from './GroupBoundaryCrossing';
import { PointAndCrossings } from './PointAndCrossings';
export declare class PointAndCrossingsList {
    ListOfPointsAndCrossings: Array<PointAndCrossings>;
    index: number;
    Count(): number;
    constructor();
    Add(intersect: Point, crossings: Array<GroupBoundaryCrossing>): void;
    Pop(): PointAndCrossings;
    CurrentIsBeforeOrAt(comparand: Point): boolean;
    get First(): PointAndCrossings;
    get Last(): PointAndCrossings;
    Reset(): void;
    MergeFrom(other: PointAndCrossingsList): void;
    Trim(start: Point, end: Point): void;
    static ToCrossingArray(crossings: Array<GroupBoundaryCrossing>, dirToInside: Direction): GroupBoundaryCrossing[];
    ToString(): string;
}
