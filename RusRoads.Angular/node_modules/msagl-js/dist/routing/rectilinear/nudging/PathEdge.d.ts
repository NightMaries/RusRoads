import { Point } from '../../../math/geometry/point';
import { Direction } from '../../../math/geometry/direction';
import { AxisEdge } from './AxisEdge';
import { LongestNudgedSegment } from './LongestNudgedSegment';
import { Path } from './Path';
export declare class PathEdge {
    AxisEdge: AxisEdge;
    Next: PathEdge;
    Prev: PathEdge;
    Width: number;
    Path: Path;
    toString(): string;
    constructor(edgeForNudging: AxisEdge, width: number);
    private longestNudgedSegment;
    get LongestNudgedSegment(): LongestNudgedSegment;
    set LongestNudgedSegment(value: LongestNudgedSegment);
    IsFixed: boolean;
    get Source(): Point;
    get Target(): Point;
    static VectorsAreParallel(a: Point, b: Point): boolean;
    static EdgesAreParallel(edge: PathEdge, pathEdge: PathEdge): boolean;
    get Direction(): Direction;
    Reversed: boolean;
    index: number;
    get Index(): number;
    set Index(value: number);
}
