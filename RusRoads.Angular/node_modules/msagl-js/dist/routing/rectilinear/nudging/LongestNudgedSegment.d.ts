import { Point } from '../../../math/geometry/point';
import { Direction } from '../../../math/geometry/direction';
import { SegmentBase } from '../../visibility/SegmentBase';
import { PathEdge } from './PathEdge';
export declare class LongestNudgedSegment extends SegmentBase {
    constructor(variable: number);
    CompassDirection: Direction;
    edges: Array<PathEdge>;
    start: Point;
    end: Point;
    get Start(): Point;
    get End(): Point;
    get Edges(): Array<PathEdge>;
    AddEdge(edge: PathEdge): void;
    TryPointForStartAndEndNorth(p: Point): void;
    TryPointForStartAndEndEast(p: Point): void;
    _isFixed: boolean;
    get IsFixed(): boolean;
    set IsFixed(value: boolean);
    Id: number;
    get Width(): number;
    GetLeftBound(): number;
    GetRightBound(): number;
    Position(): number;
    IdealPosition: number;
}
