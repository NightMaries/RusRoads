import { Direction } from '../../../math/geometry/direction';
import { VisibilityEdge } from '../../visibility/VisibilityEdge';
import { VisibilityVertex } from '../../visibility/VisibilityVertex';
import { LongestNudgedSegment } from './LongestNudgedSegment';
export declare class AxisEdge extends VisibilityEdge {
    Direction: Direction;
    constructor(source: VisibilityVertex, target: VisibilityVertex);
    RightNeighbors: Set<AxisEdge>;
    AddRightNeighbor(edge: AxisEdge): void;
    LeftBound: number;
    RightBound: number;
    setOfLongestSegs: Set<LongestNudgedSegment>;
    get LongestNudgedSegments(): Iterable<LongestNudgedSegment>;
    AddLongestNudgedSegment(segment: LongestNudgedSegment): void;
    BoundFromRight(rightbound: number): void;
    BoundFromLeft(leftbound: number): void;
}
