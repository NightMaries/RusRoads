import { Entity } from './entity';
import { Edge } from './edge';
import { Graph } from './graph';
export declare class Node extends Entity {
    private _id;
    get id(): string;
    set id(value: string);
    inEdges: Set<Edge>;
    outEdges: Set<Edge>;
    selfEdges: Set<Edge>;
    toString(): string;
    constructor(id: string);
    get isGraph(): boolean;
    graphs(): IterableIterator<Graph>;
    private _edges;
    private addInEdge;
    private addOutEdge;
    private addSelfEdge;
    addEdde(e: Edge): Edge;
    get edges(): IterableIterator<Edge>;
    get outDegree(): number;
    get inDegree(): number;
    get selfDegree(): number;
    get degree(): number;
    getAncestors(): IterableIterator<Graph>;
    isUnderCollapsedGraph(): boolean;
}
