import { String } from 'typescript-string-operations';
export class SymmetricTuple {
    constructor(a, b) {
        this.A = a;
        this.B = b;
    }
    GetHashCode() {
        throw new Error('not implemented');
        //return (this.A.GetHashCode() | this.B.GetHashCode());
        // The operator should be an XOR ^ instead of an OR, but not available in CodeDOM
        //  we need a symmetric hash code
    }
    Equals(obj) {
        if (obj == null) {
            return false;
        }
        if (this == obj) {
            return true;
        }
        const other = obj;
        return (this.A == other.A && this.B == other.B) || (this.A == other.B && this.B == other.A);
    }
    ToString() {
        return String.Format('({0},{1})', this.A, this.B);
    }
}
//# sourceMappingURL=SymmetricTuple.js.map